vocabs
=========
succinct
compositional
panacea
aptly
absurd



code
==========


function parameter
---------------
funcName(name: String, age: Int, action: () -> Unit){
	action()
}


Observable.just(listOf(Any....))
Observable.just(Any....)
listOf(Any...).toObservable
Observable.fromIterable


Observable.empty
Observable.never

Observable.create<Any> { emitter ->
    emitter.onNext(Any)
    emitter.onError(Throwable)
    emitter.onComplete()
}

file.readText(kotlin.text.Charsets.UTF_8)

Subject
1) PublishSubject
2) BehaviorSubject
3) ReplaySubject


list.joinToString("separator"){ }

list.map { }
list.fold(initialValue) { s, a -> ()}

things missed
===========
1) sealed class
2) extension method in supportCode - IntRange.random()


(0 until 1) forEach{ println(it)} // 0 => exclusive 1